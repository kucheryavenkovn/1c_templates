{1,
{1,
{"Шаблоны текста kvn",1,0,"",""},
{1,
{"БСП",1,0,"",""},
{1,
{"Печать",1,0,"",""},
{0,
{"ВнешняяПечатнаяФормаWord",0,0,"","
Функция СведенияОВнешнейОбработке() Экспорт
	
	// Стандартное описание сведений о внешней печатной форме

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Вставить(""Версия"", ""1.0"");
	ПараметрыРегистрации.Наименование = ""Название печатной формы"";
	
	ПараметрыРегистрации.Назначение.Добавить(""Справочник.ФизическиеЛица"");
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = ""Название команды"";   //Синоним
	НоваяКоманда.Идентификатор = ""НазваниеКоманды"";   //ПолноеИмя
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
		
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Просто передаем управление дальше если удовлетворяет условию

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, ""НазваниеКоманды"") Тогда
		ПечатьДокумента(КоллекцияПечатныхФорм, МассивОбъектов, ОбъектыПечати);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьДокумента(КоллекцияПечатныхФорм, МассивОбъектов, ОбъектыПечати) Экспорт
	
	 // Сначала получим данные а потом передадим их для заполнения макета
		
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиДокумента(МассивОбъектов);	
		
	ВывестиДанныеДокументаВТабличныйДокумент(КоллекцияПечатныхФорм, МассивДанныхЗаполнения, ОбъектыПечати);
		
КонецПроцедуры 

Функция ПолучитьДанныеДляПечатиДокумента(МассивОбъектов)

	// здесь происходит заполнение данными для ПФ

	Данные = Новый Структура;
	
	...
	
	Возврат Данные;
	
КонецФункции 

Процедура ВывестиДанныеДокументаВТабличныйДокумент(КоллекцияПечатныхФорм, МассивДанныхЗаполнения, ОбъектыПечати)

	ДвоичныеДанныеМакета = ПолучитьМакет(""ПФ_DOC_НазваниеМакета"");
	
	Если ДвоичныеДанныеМакета <> Неопределено Тогда
		
	// Инициализируем печатную форму	
	
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, ""НазваниеКоманды"");

	// Наличие пустого табличного документа в коллекции обязательно

		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		
		Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(ДвоичныеДанныеМакета,Неопределено);
		ПечатнаяФормаДокумента = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Макет.НастройкиСтраницыМакета, Макет);		

	// Определим какие области в документе Word хотим заполнить 
	// Для этого у нас документ должен быть размечен конструкциями 
	// {v8 Область.НазваниеОбласти} 
	// {/v8 Область.НазваниеОбласти}
	// наличие областей обязательно

		ОбластьЗаявление = Новый Структура;
		ОбластьЗаявление.Вставить(""ИмяОбласти"", ""Заявление"");
		ОбластьЗаявление.Вставить(""ТипОбласти"", ""Общая"");
		
	// Передаем данные заполнения для заполнения печатной формы 
	// Имена параметров данных заполнения должны совпадать с размеченными параметрами в документе в виде  
	// {v8 НазваниеПараметра}

		Область = УправлениеПечатью.ОбластьМакета(Макет, ОбластьЗаявление);
		УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФормаДокумента, Область, МассивДанныхЗаполнения, Ложь);

	// Поместим получившийся документ в коллекцию печатных форм, в раздел ОфисныеДокументы
	// так БСП поймет что нужно открывать Word при формировании печатной формы

		АдресХранилищаОфисныйДокумент = УправлениеПечатью.СформироватьДокумент(ПечатнаяФормаДокумента);
		УправлениеПечатью.ОчиститьСсылки(ПечатнаяФормаДокумента, Ложь);
		УправлениеПечатью.ОчиститьСсылки(Макет);
		
		ОфисныеДокументы = Новый Соответствие;
		
		ОфисныеДокументы.Вставить(АдресХранилищаОфисныйДокумент, НСтр(""ru = 'Название документа'""));
		
		ПечатнаяФорма.СинонимМакета    = НСтр(""ru = 'Название документа (документ Microsoft Word)'"");
		ПечатнаяФорма.ОфисныеДокументы = ОфисныеДокументы;
		
	КонецЕсли;

КонецПроцедуры"}
}
}
}
}
}